/* [wxMaxima: input   start ] */
load("draw");
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
retangulo(M,u):=
block (
    [lx,ly,quad,v,maxh,minh,maxv,minv],
    quad: matrix([0, 0, 1, 1], [0, 1, 1, 0]),
    v: matrix([u[1],u[1],u[1],u[1]], [u[2],u[2],u[2],u[2]]),
    quad:M.quad+v,
    lx:quad[1],
    ly:quad[2],
    maxh:max(lx[1],lx[2],lx[3],lx[4]),
    minh:min(lx[1],lx[2],lx[3],lx[4]),
    maxv:max(ly[1],ly[2],ly[3],ly[4]),
    minv:min(ly[1],ly[2],ly[3],ly[4]),
    retangulo:polygon(lx,ly),
    return([retangulo,[minh,maxh],[minv,maxv]])
)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
letra(lm,lu):=
block(
    [minh,maxh,minv,maxv,k],
    lret:[],
    minh:inf,
    maxh:minf,
    minv:inf,
    maxv:minf,
    for k:1 thru length(lm) do(
        ret:retangulo(lm[k],lu[k]),
        minh:min(minh,ret[2][1]),
        maxh:max(maxh,ret[2][2]),
        minv:min(minv,ret[3][1]),
        maxv:max(maxv,ret[3][2]),
        lret:cons(ret[1],lret)
    ),
    draw2d(
    xrange=[minh-1,maxh+1],
    yrange=[minv-1,maxv+1],
    lret)
    )$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */


A:matrix([1, 0], [3, 1]);
R:matrix([-1, 0], [0, 1]);
B:R.A;
C:matrix([0.3, 0], [0, 4]);
a:[0,0];
b:[0,0];
c:[-0.15,-3];
letra([A,B,C],[a,b,c]);
for j:1 thru 1500 do (factorial(j));

A:matrix([1, 0], [3, 1]);
R:matrix([-1, 0], [0, 1]);
B:R.A;
C:A;
D:B;
a:[0,2];
b:[0,2];
c:[2,2];
d:[2,2];
letra([A,B,C],[a,b,c]);
for j:1 thru 1500 do (factorial(j));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */


/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */

/* [wxMaxima: input   end   ] */



